services:
  traefik:
    image: traefik:3.0
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
      - 8090:8090
    restart: always
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8090
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`proxy.${DOMAIN}`)
      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`proxy.${DOMAIN}`)
      - traefik.http.routers.traefik-dashboard-https.tls=true
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certificates:/certificates
    command:
      - --providers.docker
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.proxy.address=:8090
      - --certificatesresolvers.le.acme.email=jhudeyhemi51@gmail.com
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --log
      - --api
    networks:
      - traefik-public

  db:
    image: postgres:12
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - backend/.env

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - traefik-public
      - default
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.adminer-http.rule=Host(`adminer.${DOMAIN}`)
      - traefik.http.routers.adminer-http.entrypoints=http
      - traefik.http.routers.adminer-http.middlewares=https-redirect
      - traefik.http.routers.adminer-https.rule=Host(`adminer.${DOMAIN}`)
      - traefik.http.routers.adminer-https.entrypoints=https
      - traefik.http.routers.adminer-https.tls=true
      - traefik.http.routers.adminer-https.tls.certresolver=le
      - traefik.http.services.adminer.loadbalancer.server.port=8080

  backend:
    build:
      context: ./backend
    restart: always
    networks:
      - traefik-public
      - default
    depends_on:
      - db
    env_file:
      - backend/.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.services.backend.loadbalancer.server.port=80
      - traefik.http.routers.backend-http.rule=(Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))
      - traefik.http.routers.backend-http.entrypoints=http
      - traefik.http.routers.backend-https.rule=(Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))
      - traefik.http.routers.backend-https.entrypoints=https
      - traefik.http.routers.backend-https.tls=true
      - traefik.http.routers.backend-https.tls.certresolver=le
      - traefik.http.middlewares.www-redirect.redirectregex.regex=^http(s)?://www.(${DOMAIN})/(.*)
      - traefik.http.middlewares.www-redirect.redirectregex.replacement=http$${1}://$DOMAIN/$${3}
      - traefik.http.routers.backend-http.middlewares=https-redirect,www-redirect
      - traefik.http.routers.backend-https.middlewares=www-redirect
      - traefik.http.middlewares.www-redirect.redirectregex.permanent=true

  frontend:
    restart: always
    networks:
      - traefik-public
      - default
    env_file:
      - frontend/.env
        #    ports:
        #- 5173:80
    build:
      context: ./frontend
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.services.frontend.loadbalancer.server.port=80
      - traefik.http.routers.frontend-http.rule=Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)
      - traefik.http.routers.frontend-http.entrypoints=http
      - traefik.http.routers.frontend-https.rule=Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)
      - traefik.http.routers.frontend-https.entrypoints=https
      - traefik.http.routers.frontend-https.tls=true
      - traefik.http.routers.frontend-https.tls.certresolver=le
      - traefik.http.middlewares.www-redirect.redirectregex.regex=^http(s)?://www.($DOMAIN)/(.*)
      - traefik.http.middlewares.www-redirect.redirectregex.replacement=http$${1}://$DOMAIN/$${3}
      - traefik.http.routers.frontend-https.middlewares=www-redirect
      - traefik.http.routers.frontend-http.middlewares=https-redirect,www-redirect
      - traefik.http.middlewares.www-redirect.redirectregex.permanent=true

volumes:
  db-data:
    #  traefik-public-certificates:

networks:
  traefik-public:
